substitutions:
  name: "sonos-round"
  friendly_name: "Sonos Round"
  device_description: "Viewe - 2.1 inch 480*480 Circular Push Knob IPS LCD TFT Display"
  project_name: "Viewe.UEDX48480021-MD80E-SDK"
  project_version: "1.0.0"
  media_player: "media_player.kitchen"

esphome:
  name: "${name}"
  friendly_name: "${friendly_name}"
  project:
    name: "${project_name}"
    version: "${project_version}"
  min_version: 2024.11.0
  name_add_mac_suffix: false

external_components:
  - source: my_components/gc9503v/components

esp32:
  board: esp32-s3-devkitc-1
  flash_size: 16MB
  framework:
    type: esp-idf
    platform_version: 6.8.1
    version: 5.3.0
    sdkconfig_options:
      CONFIG_ESP32S3_DEFAULT_CPU_FREQ_240: y
      CONFIG_ESP32S3_DATA_CACHE_64KB: y
      CONFIG_SPIRAM_FETCH_INSTRUCTIONS: y
      CONFIG_SPIRAM_RODATA: y
psram:
  speed: 80MHz
  mode: octal

debug:
  update_interval: 30s

# Enable logging
logger:
  level: DEBUG
  hardware_uart: UART0

# Enable Home Assistant API
api:

# Allow Over-The-Air updates
ota:
- platform: esphome

mdns:
  disabled: false

wifi:
  power_save_mode: none
  networks:
    - ssid: !secret wifi_ssid
      password: !secret wifi_password
      manual_ip:
        static_ip: 192.168.1.228
        gateway: 192.168.1.1
        subnet: 255.255.255.0

captive_portal:

spi:    #required only for libraries

display:
  - platform: gc9503v
    model: VIEWE
    show_test_card: true
    update_interval: never
    auto_clear_enabled: false
    id: my_display
    color_order: RGB
    dimensions:
      width: 480
      height: 480  
    de_pin:
      number: 17
      inverted: false
    hsync_pin:
      number: 46
      inverted: false
    vsync_pin:
      number: 3
      inverted: false
    pclk_pin: 9

    pclk_inverted: false
    pclk_frequency: 26000000

    hsync_pulse_width: 8
    hsync_front_porch: 40
    hsync_back_porch: 20
    vsync_pulse_width: 8
    vsync_front_porch: 40
    vsync_back_porch: 20
    data_pins:
      red:
        - 40         # R1
        - 41         # R2
        - 42         # R3
        - 2          # R4
        - 1          # R5
      green:
        - 21         # G0
        - 47         # G1
        - 48         # G2
        - 45         # G3
        - 38         # G4
        - 39         # G5 
      blue:
        - 10         # B1
        - 11         # B2
        - number: 12 # B3
          allow_other_uses: true
        - number: 13 # B4
          allow_other_uses: true
        - 14         # B5

    enable_pin:
      number: 18
      inverted: false
    reset_pin:
      number: 8
      inverted: false
    sclk_pin:
      number: 13
      allow_other_uses: true
    mosi_pin:
      number: 12
      allow_other_uses: true

binary_sensor:
  - platform: gpio
    id: click
    pin: 
      number: 0
      inverted: true

sensor:
  - platform: uptime
    name: "Uptime Sensor"
    id: uptime_sensor
    type:
      timestamp
    entity_category: "diagnostic"

  - platform: wifi_signal # Reports the WiFi signal strength/RSSI in dB
    name: "WiFi Signal dB"
    id: wifi_signal_db
    update_interval: 60s
    entity_category: "diagnostic"

  - platform: copy # Reports the WiFi signal strength in %
    source_id: wifi_signal_db
    name: "WiFi Signal Percent"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "Signal %"
    entity_category: "diagnostic"
    device_class: ""

  - platform: rotary_encoder
    id: encoder
    pin_a: 5
    pin_b: 6
    restore_mode: ALWAYS_ZERO

  - platform: homeassistant
    id: kitchen_media_player_volume
    entity_id: ${media_player}
    attribute: volume_level
    on_value:
      - lvgl.slider.update:
          id: slider_media_player
          value: !lambda return (x * 100);

text_sensor:
  - platform: wifi_info
    ip_address:
      name: "IP Address"
      entity_category: "diagnostic"
    ssid:
      name: "Connected SSID"
      entity_category: "diagnostic"
    mac_address:
      name: "Mac Address"
      entity_category: "diagnostic"

  #  Creates a sensor showing when the device was last restarted
  - platform: template
    name: 'Last Restart'
    id: device_last_restart
    icon: mdi:clock
    entity_category: "diagnostic"

  - platform: homeassistant
    id: kitchen_media_player_state
    entity_id: ${media_player}
    on_value:
      then:
        - lvgl.widget.update:
            id: btn_play_pause
            state:
              checked: !lambda return (0 == x.compare(std::string{"playing"}));
              disabled: !lambda return ((0 == x.compare(std::string{"unavailable"})) or (0 == x.compare(std::string{"unknown"})));
        - lvgl.label.update:
            id: lbl_play_pause
            text: !lambda |-
              static char buf[10];
              std::string icon;
              if (0 == x.compare(std::string{"playing"})) {
                  icon = "\U000F03E4";  // pause
              } else {
                  icon = "\U000F040A"; // play
              }
              snprintf(buf, sizeof(buf), "%s", icon.c_str());
              return buf;

  - platform: homeassistant
    id: media_player_title
    entity_id: ${media_player}
    attribute: media_title
    on_value:
      then:
        - lvgl.label.update:
            id: lbl_title
            text:
              format: "%s"
              args: [ 'x.c_str()' ]

  - platform: homeassistant
    id: media_player_media_channel
    entity_id: ${media_player}
    attribute: media_channel
    on_value:
      then:
        - lvgl.label.update:
            id: lbl_second_line
            text:
              format: "%s"
              args: [ 'x.c_str()' ]

  - platform: homeassistant
    id: media_player_media_artist
    entity_id: ${media_player}
    attribute: media_artist
    on_value:
      then:
        - lvgl.label.update:
            id: lbl_second_line
            text:
              format: "%s - %s"
              args: [ 'x.c_str()', 'id(media_player_media_album_name).state.c_str()' ]

  - platform: homeassistant
    id: media_player_media_album_name
    entity_id: ${media_player}
    attribute: media_album_name
    on_value:
      then:
        - lvgl.label.update:
            id: lbl_second_line
            text:
              format: "%s - %s"
              args: [ 'id(media_player_media_artist).state.c_str()', 'x.c_str()' ]

time:
  - platform: homeassistant
    id: homeassistant_time
  - platform: sntp
    id: sntp_time
    # Define the timezone of the device
    timezone: ""
    # Change sync interval from default 5min to 6 hours (or as set in substitutions)
    update_interval: 6h
    # Set specific sntp servers to use
    servers:
      - "0.pool.ntp.org"
      - "1.pool.ntp.org"
      - "2.pool.ntp.org"
    # Publish the time the device was last restarted
    on_time_sync:
      then:
        # Update last restart time, but only once.
        - if:
            condition:
              lambda: 'return id(device_last_restart).state == "";'
            then:
              - text_sensor.template.publish:
                  id: device_last_restart
                  state: !lambda 'return id(sntp_time).now().strftime("%a %d %b %Y - %I:%M:%S %p");'

output:
  - platform: ledc
    pin: 
      number: 7
      inverted: true
    id: backlight_led
    frequency: 5kHz

light:
  - platform: monochromatic
    output: backlight_led
    name: Backlight
    id: backlight
    restore_mode: ALWAYS_ON
    default_transition_length: 200ms

font:
  - file: "fonts/materialdesignicons-webfont.ttf"
    id: mdi_42
    size: 42
    bpp: 4
    glyphs: [
          "\U000F04AD", # mdi-skip-next
          "\U000F04AE", # mdi-skip-previous
          "\U000F040A", # mdi-play
          "\U000F03E4", # mdi-pause
      ]

  - file:
      type: gfonts
      family: Roboto
    id: roboto_28
    size: 28
    bpp: 4
    glyphsets:
      - GF_Latin_Core
      - GF_Greek_Core
      - GF_Cyrillic_Core

lvgl:
  displays:
    - my_display

  encoders:
    enter_button: click
    sensor: encoder
    group: my_group

  log_level: DEBUG

  default_font: roboto_28

  theme:
    slider:
      focus_key:
        outline_width: 4
    button:
      focus_key:
        outline_width: 4

  pages:
    - id: main_page
      on_load:
        then:
          - lvgl.widget.focus:
              id: slider_media_player
      scrollbar_mode: "OFF"
      widgets:
        - label:
            id: lbl_second_line
            width: 420
            align_to: 
              id: ring
              align: CENTER
              y: -40
            text: 'unknown'
            text_align: CENTER
            long_mode: SCROLL
        - label:
            id: lbl_title
            width: 420
            align_to: 
              id: lbl_second_line
              align: OUT_TOP_MID
              y: -8
            text: 'unknown'
            text_align: CENTER
            long_mode: SCROLL

        - arc:
            id: ring
            align: CENTER
            height: 480
            width: 480
            min_value: 0
            max_value: 100
            value: 100
            arc_width: 15
            adjustable: false
            start_angle: 0
            end_angle: 360
            indicator:
              arc_width: 15
              arc_color: 0x016fff
            on_focus:
              then:
                - logger.log: "Focus ring"

        - slider:
            id: slider_media_player
            group: my_group
            align_to: 
              id: ring
              align: CENTER
              y: 120
            width: 320
            height: 30
            pad_all: 8
            min_value: 0
            max_value: 100
            adv_hittest: true
            on_value:
              - logger.log:
                  format: "Slider value %f "
                  args: [ 'x' ]
              - homeassistant.action:
                  action: media_player.volume_set
                  data:
                    entity_id: ${media_player}
                    volume_level: !lambda return (x / 100);
            on_focus:
              then:
                - logger.log: "Focus slider"
        - button:
            id: btn_prev
            align_to:
              id: ring
              align: CENTER
              x: -120
              y: 40
            group: my_group
            width: 110
            height: 65          
            widgets:
              - label:
                  align: center
                  text_align: CENTER
                  text_font: mdi_42
                  text: "\U000F04AE"
            on_focus:
              then:
                - logger.log: "Focus btn_prev"
            on_click:
              - homeassistant.action:
                  action: media_player.media_previous_track
                  data:
                    entity_id: ${media_player}
        - button:
            id: btn_play_pause
            align_to:
              id: ring
              align: CENTER
              y: 40
            group: my_group
            width: 110
            height: 65
            checkable: true
            widgets:
              - label:
                  align: center
                  text_align: CENTER
                  id: lbl_play_pause
                  text_font: mdi_42
                  text: "\U000F040A"
            on_focus:
              then:
                - logger.log: "Focus btn_play_pause"
            on_value:
              - homeassistant.action:
                  action: media_player.media_play_pause
                  data:
                    entity_id: ${media_player}
        - button:
            id: btn_fw
            align_to:
              id: btn_play_pause
              align: OUT_RIGHT_MID
              x: 10
            group: my_group
            width: 110
            height: 65           
            widgets:
              - label:
                  align: center
                  text_align: CENTER
                  text_font: mdi_42
                  text: "\U000F04AD"
            on_focus:
              then:
                - logger.log: "Focus btn_fw"
            on_click:
              - homeassistant.action:
                  action: media_player.media_next_track
                  data:
                    entity_id: ${media_player}
